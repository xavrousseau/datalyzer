# ============================================================
# Fichier : home.py
# Objectif : Page d‚Äôaccueil de Datalyzer (version finale)
# Version am√©lior√©e avec √©l√©ments interactifs et navigation dynamique
# ============================================================

import streamlit as st
from utils.ui_utils import show_header_image, show_icon_header, show_footer

def run_home():
    # üé¥ Image d√©corative d‚Äôintroduction avec redimensionnement dynamique
    show_header_image("bg_torii_sunrise.png", height=250)

    # üéå Titre d‚Äôaccueil stylis√©
    show_icon_header("üå∏", "Bienvenue sur Datalyzer", "Interface zen pour explorer, nettoyer et analyser vos donn√©es")

    # ‚ú® Pr√©sentation succincte
    st.markdown("""
    **Datalyzer** est une application interactive qui vous accompagne dans l‚Äôanalyse exploratoire de vos donn√©es :  
    nettoyage, typage, visualisation, d√©tection d‚Äôanomalies, export...  
    _Tout est int√©gr√© dans un pipeline fluide, p√©dagogique et √©l√©gant._
    """)

    st.divider()

    # üß≠ Guide utilisateur avec liens directs vers les pages principales
    st.markdown("## üó∫Ô∏è Guide de navigation")

    st.markdown("""
    ### üìÅ Donn√©es
    - **[Chargement & Snapshots](#chargement)** : Importez vos fichiers `.csv`, `.xlsx`, `.parquet`... et cr√©ez des versions interm√©diaires.
    - **[Jointures](#jointures)** : Fusionnez vos fichiers de mani√®re interactive avec suggestions automatiques.
    - **[Export](#export)** : Exportez vos jeux nettoy√©s vers diff√©rents formats (.csv, .json, .xlsx, .parquet).

    ### üîç Analyse interactive
    - **[Exploration](#exploration)** : Vue globale (types, manquants, distributions, outliers, nettoyage automatique).
    - **[Typage](#typage)** : Correction interactive des types (`int`, `float`, `bool`, `datetime`...).
    - **[Suggestions](#suggestions)** : Variables √† encoder ou vectoriser, d√©tection de texte libre ou colonnes inutiles.
    - **[Qualit√©](#qualite)** : Score global, anomalies, doublons, heatmap de NA, placeholders.
    - **[Multivari√©e](#multivariee)** : ACP, clustering KMeans, boxplots, projection 2D, Cram√©r‚Äôs V.
    - **[Cat√©gorielle](#cat)** : Corr√©lations, croisements, stats group√©es.
    - **[Cible](#cible)** : Analyse centr√©e sur une ou deux cibles (`num√©rique` ou `cat√©gorielle`).
    - **[Anomalies](#anomalies)** : D√©tection d‚Äôoutliers via Z-score ou IQR.
    """)

    st.divider()

    # üí° Astuce navigation
    st.info("üí° Utilisez le **menu lat√©ral gauche** pour naviguer entre les sections.")
    
    # Menu lat√©ral fixe (ajout de boutons ou liens interactifs)
    menu_options = ["Donn√©es", "Analyse", "Qualit√©", "Multivari√©e", "Cat√©gorielle", "Anomalies", "Cible"]
    choice = st.sidebar.selectbox("Naviguer vers", menu_options)
    
    if choice == "Donn√©es":
        st.write("Acc√©dez √† l'onglet pour charger et visualiser vos fichiers.")
    elif choice == "Analyse":
        st.write("Acc√©dez √† l'onglet pour effectuer une analyse exploratoire de vos donn√©es.")
    elif choice == "Qualit√©":
        st.write("Acc√©dez √† l'onglet pour analyser la qualit√© des donn√©es.")
    elif choice == "Multivari√©e":
        st.write("Acc√©dez √† l'onglet pour une analyse multivari√©e des donn√©es.")
    elif choice == "Cat√©gorielle":
        st.write("Acc√©dez √† l'onglet pour analyser les donn√©es cat√©gorielles.")
    elif choice == "Anomalies":
        st.write("Acc√©dez √† l'onglet pour d√©tecter les anomalies dans les donn√©es.")
    elif choice == "Cible":
        st.write("Acc√©dez √† l'onglet pour analyser les variables cibles.")

    show_footer("Xavier Rousseau", "xavier-data")
